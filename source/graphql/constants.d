module graphql.constants;

enum Constants {
	ENUM = "ENUM",
	ENUM_DEPRECATIONREASON_TODO = "ENUM_DEPRECATIONREASON_TODO",
	ENUM_DESCRIPTION_TODO = "ENUM_DESCRIPTION_TODO",
	Float = "Float",
	INPUT_OBJECT = "INPUT_OBJECT",
	Int = "Int",
	LIST = "LIST",
	List = "List",
	Mutation = "Mutation",
	NON_NULL = "NON_NULL",
	NonNull = "NonNull",
	Nullable = "Nullable",
	OBJECT = "OBJECT",
	Operation = "Operation",
	Query = "Query",
	Schema = "Schema",
	String = "String",
	Subscription = "Subscription",
	UNION = "UNION",
	__Directive = "__Directive",
	__DirectiveLocation = "__DirectiveLocation",
	__EnumValue = "__EnumValue",
	__Field = "__Field",
	__InputValue = "__InputValue",
	__Type = "__Type",
	__TypeKind = "__TypeKind",
	__listType = "__listType",
	__nonNullType = "__nonNullType",
	__schema = "__schema",
	__type = "__type",
	__typename = "__typename",
	args = "args",
	data = "data",
	defaultValue = "defaultValue",
	deprecationReason = "deprecationReason",
	description = "description",
	directives = "directives",
	enumValues = "enumValues",
	fields = "fields",
	inputFields = "inputFields",
	interfaces = "interfaces",
	interfacesNames = "interfacesNames",
	isDeprecated = "isDeprecated",
	kind = "kind",
	errors = "errors",
	locations = "locations",
	mutation = "mutation",
	mutationType = "mutationType",
	name = "name",
	null_ = "null",
	ofType = "ofType",
	ofTypeName = "ofTypeName",
	opCmp = "opCmp",
	opEquals = "opEquals",
	possibleTypes = "possibleTypes",
	possibleTypesNames = "possibleTypesNames",
	query = "query",
	queryType = "queryType",
	string_ = "string",
	subscription = "subscription",
	subscriptionType = "subscriptionType",
	toHash = "toHash",
	toString = "toString",
	true_ = "true",
	type = "type",
	typenameOrig = "typenameOrig",
	types = "types",
}
